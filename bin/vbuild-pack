#!/usr/bin/env node
const chalk = require('chalk')
const meow = require('meow')

const cli = meow(`
  ${chalk.bold('Options:')}

    ${chalk.yellow('--dev, -d')}        ${chalk.dim('Pack in development mode')}
    ${chalk.yellow('--watch, -w')}      ${chalk.dim('Pack in watch mode')}
    ${chalk.yellow('--config, -c')}     ${chalk.dim('Load config file')}
    ${chalk.yellow('--dist')}           ${chalk.dim('Custom dist directory')}
    ${chalk.yellow('--eslint, -e')}     ${chalk.dim('Add ESLint support')}
    ${chalk.yellow('--port, -p')}       ${chalk.dim('Port of dev server')}
    ${chalk.yellow('--open, -o')}       ${chalk.dim('Open browser')}
    ${chalk.yellow('--help, -h')}       ${chalk.dim('Output help (You are here!)')}
    ${chalk.yellow('--version, -v')}    ${chalk.dim('Output version')}

  ${chalk.bold('Commands:')}

    ${chalk.yellow('pack')}        ${chalk.dim('Pack your Vue app (default command)')}
    ${chalk.yellow('init')}        ${chalk.dim('Initialize an empty project')}

  ${chalk.bold('To see the help for specific command, you can run:')}

    ${chalk.yellow('vbuild [command] --help')}
\t`, {
  alias: {
    h: 'help',
    v: 'version',
    d: 'dev',
    c: 'config',
    o: 'open',
    p: 'port',
    w: 'watch',
    e: 'eslint'
  }
})

const options = Object.assign({}, cli.flags)

if (cli.input[0]) {
  options.entry = options.entry || cli.input[0]
}

try {
  require('../lib')(options)
} catch (err) {
  console.error(`${chalk.bgRed.black(' ERROR ')} Something went wrong during the build:\n`)
  if (err.name === 'AppError') {
    console.error(chalk.red(err.message))
  } else {
    console.error(err.stack)
  }
  process.exit(1)
}
